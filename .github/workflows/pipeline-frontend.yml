name: BSN Frontend Pipeline

on:
  push:
    branches:
      - 05-ci-cd
    paths:
      - book-network-ui/**
      - docker/frontend/**
      - 'docker-compose.yml'
      - .github/workflows/*-frontend.yml

  workflow_dispatch:



jobs:
  build-image:
    name: Build frontend Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract project version
        id: extract_version
        run: |
          cd book-network-ui
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: book-network-ui
          file: docker/frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest

  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Create deployment folder
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ci-cd

      - name: Copy docker-compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: ci-cd/docker-compose.yml

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ci-cd
            sudo docker-compose -f docker-compose.yml pull -q
            sudo docker-compose -f docker-compose.yml up -d
